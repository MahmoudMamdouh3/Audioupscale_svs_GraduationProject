{"ast":null,"code":"var _jsxFileName = \"/Users/omarzakzook/Desktop/supersonics/src/components/FileUpload.jsx\";\nimport React, { useState } from \"react\";\nimport { Box, Typography, TextField, Button, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Avatar } from \"@mui/material\";\nfunction FileUpload() {\n  const [selectedAudioFile, setSelectedAudioFile] = useState(null);\n  const [selectedMidiFile, setSelectedMidiFile] = useState(null);\n  const [selectedFormat, setSelectedFormat] = useState(\"\");\n  const [openArtistSelection, setOpenArtistSelection] = useState(false);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // State to store selected artist\n  const [artistCounts, setArtistCounts] = useState({\n    \"Amr Diab\": 0,\n    \"Om Kalthoum\": 0,\n    \"Sayed Darwish\": 0,\n    Abdelhalim: 0,\n    Abdelwahab: 0,\n    \"Mickael Jackson\": 0\n  });\n\n  // Define image URLs for each artist\n  const [artistImages] = useState({\n    \"Amr Diab\": \"/public/assets/amrdiab.jpeg\",\n    \"Om Kalthoum\": \"public/assets/omkalthoum.jpeg\",\n    \"Sayed Darwish\": \"public/assets/sayeddarwish.jpeg\",\n    Abdelhalim: \"public/assets/abdelhalim.jpeg\",\n    Abdelwahab: \"public/assets/abdelwahab.jpeg\",\n    \"Mickael Jackson\": \"public/assets/jackson.jpeg\"\n  });\n  const handleAudioFileChange = event => {\n    setSelectedAudioFile(event.target.files[0]);\n  };\n  const handleMidiFileChange = event => {\n    setSelectedMidiFile(event.target.files[0]);\n  };\n  const handleFormatChange = event => {\n    setSelectedFormat(event.target.value);\n  };\n  const handleUpload = () => {\n    // Handle file upload logic\n    console.log(\"Audio file uploaded:\", selectedAudioFile);\n    console.log(\"MIDI file uploaded:\", selectedMidiFile);\n    console.log(\"Selected format:\", selectedFormat);\n  };\n  const handleOpenArtistSelection = () => {\n    setOpenArtistSelection(true);\n  };\n  const handleCloseArtistSelection = () => {\n    setOpenArtistSelection(false);\n  };\n  const handleSelectArtist = artist => {\n    setSelectedArtist(artist); // Set the selected artist\n    const updatedCounts = {\n      ...artistCounts\n    };\n    updatedCounts[artist]++;\n    setArtistCounts(updatedCounts);\n    setOpenArtistSelection(false);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      // Align content to the right\n      height: \"100vh\",\n      maxWidth: \"100%\",\n      padding: 2,\n      \"& > *\": {\n        marginBottom: 2\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: \"0 0 auto\",\n      marginRight: 2 // Add space between image and content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/path/to/your/image.jpg\",\n    alt: \"Artist\",\n    style: {\n      maxWidth: \"100%\",\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 400,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    gutterBottom: true,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"File Upload\")));\n}\nexport default FileUpload;","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Avatar","FileUpload","selectedAudioFile","setSelectedAudioFile","selectedMidiFile","setSelectedMidiFile","selectedFormat","setSelectedFormat","openArtistSelection","setOpenArtistSelection","selectedArtist","setSelectedArtist","artistCounts","setArtistCounts","Abdelhalim","Abdelwahab","artistImages","handleAudioFileChange","event","target","files","handleMidiFileChange","handleFormatChange","value","handleUpload","console","log","handleOpenArtistSelection","handleCloseArtistSelection","handleSelectArtist","artist","updatedCounts","createElement","sx","display","flexDirection","alignItems","justifyContent","height","maxWidth","padding","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","flex","marginRight","src","alt","style","margin","variant","align","gutterBottom","color"],"sources":["/Users/omarzakzook/Desktop/supersonics/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Avatar,\n} from \"@mui/material\";\n\nfunction FileUpload() {\n  const [selectedAudioFile, setSelectedAudioFile] = useState(null);\n  const [selectedMidiFile, setSelectedMidiFile] = useState(null);\n  const [selectedFormat, setSelectedFormat] = useState(\"\");\n  const [openArtistSelection, setOpenArtistSelection] = useState(false);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // State to store selected artist\n  const [artistCounts, setArtistCounts] = useState({\n    \"Amr Diab\": 0,\n    \"Om Kalthoum\": 0,\n    \"Sayed Darwish\": 0,\n    Abdelhalim: 0,\n    Abdelwahab: 0,\n    \"Mickael Jackson\": 0,\n  });\n\n  // Define image URLs for each artist\n  const [artistImages] = useState({\n    \"Amr Diab\": \"/public/assets/amrdiab.jpeg\",\n    \"Om Kalthoum\": \"public/assets/omkalthoum.jpeg\",\n    \"Sayed Darwish\": \"public/assets/sayeddarwish.jpeg\",\n    Abdelhalim: \"public/assets/abdelhalim.jpeg\",\n    Abdelwahab: \"public/assets/abdelwahab.jpeg\",\n    \"Mickael Jackson\": \"public/assets/jackson.jpeg\",\n  });\n\n  const handleAudioFileChange = (event) => {\n    setSelectedAudioFile(event.target.files[0]);\n  };\n\n  const handleMidiFileChange = (event) => {\n    setSelectedMidiFile(event.target.files[0]);\n  };\n\n  const handleFormatChange = (event) => {\n    setSelectedFormat(event.target.value);\n  };\n\n  const handleUpload = () => {\n    // Handle file upload logic\n    console.log(\"Audio file uploaded:\", selectedAudioFile);\n    console.log(\"MIDI file uploaded:\", selectedMidiFile);\n    console.log(\"Selected format:\", selectedFormat);\n  };\n\n  const handleOpenArtistSelection = () => {\n    setOpenArtistSelection(true);\n  };\n\n  const handleCloseArtistSelection = () => {\n    setOpenArtistSelection(false);\n  };\n\n  const handleSelectArtist = (artist) => {\n    setSelectedArtist(artist); // Set the selected artist\n    const updatedCounts = { ...artistCounts };\n    updatedCounts[artist]++;\n    setArtistCounts(updatedCounts);\n    setOpenArtistSelection(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\", // Align content to the right\n        height: \"100vh\",\n        maxWidth: \"100%\",\n        padding: 2,\n        \"& > *\": {\n          marginBottom: 2,\n        },\n      }}\n    >\n      {/* Image on the left */}\n      <Box\n        sx={{\n          flex: \"0 0 auto\",\n          marginRight: 2, // Add space between image and content\n        }}\n      >\n        {/* Add your image component here */}\n        <img\n          src=\"/path/to/your/image.jpg\"\n          alt=\"Artist\"\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\n        />\n      </Box>\n\n      {/* Content on the right */}\n      <Box\n        sx={{\n          maxWidth: 400,\n          margin: \"auto\",\n        }}\n      >\n        <Typography variant=\"h4\" align=\"center\" gutterBottom color=\"black\">\n          File Upload\n        </Typography>\n        {/* Rest of your content */}\n        {/* ... */}\n      </Box>\n    </Box>\n  );\n}\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}